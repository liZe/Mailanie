#!/usr/bin/env python

# Mailanie - Cute Mailbox Explorator
# Copyright 2009 Guillaume Ayoub <guillaume.ayoub@kozea.fr>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation

# Mailanie is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Mailanie.  If not, see <http://www.gnu.org/licenses/>.

import os
import sys
import gettext
import gtk
import gio

parent_directory = os.path.dirname(os.path.dirname(__file__)) or os.path.pardir
if "po" in os.listdir(parent_directory):
    local_po = os.path.join(parent_directory, "po", "mo")
    sys.path.insert(0, parent_directory)
else:
    local_po = None
gettext.install("mailanie", local_po, unicode=True, names=("ngettext", ))

import mailanie.config

paths = {}
for path in mailanie.config.options("path"):
    paths[path] = False

def mount(folder, async, path):
    if not folder.query_exists():
        folder.make_directory_with_parents(gio.Cancellable())

    paths[path] = True

    if False not in paths.values():
        launch()

def launch():
    import mailanie.ui

    window = mailanie.ui.MainWindow()
    window.resize(*map(int, mailanie.config.get("window", "size").split()))
    window.show_all()

if __name__ == "__main__":
    for path in paths:
        folder = gio.File(uri=mailanie.config.get("path", path))
        folder.mount_enclosing_volume(gio.MountOperation(), mount, user_data=path)

    gtk.main()
